{
    "swagger": "2.0",
    "info": {
        "description": "An API for managing and presenting panels and other events at a convention",
        "title": "Giron-Service",
        "contact": {
            "name": "Gary Greene",
            "url": "https://github.com/JAFAX/giron-service"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.40"
    },
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths": {
        "/building": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new building",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Create a new building",
                "parameters": [
                    {
                        "description": "Building data",
                        "name": "building",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposedBuilding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/building/{id}": {
            "get": {
                "description": "Retrieve building by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Retrieve building by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Building"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a building by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Delete a building by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update building information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Update building information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Building data",
                        "name": "building",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BuildingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/buildings": {
            "get": {
                "description": "Retrieve list of all panels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Retrieve list of all panels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BuildingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/floor": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new floor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Create a new floor",
                "parameters": [
                    {
                        "description": "Floor data",
                        "name": "floor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposedFloor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/floor/{id}": {
            "get": {
                "description": "Retrieve floor based on Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Retrieve floor based on Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Floor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BuildingFloor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a floor by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Delete a floor by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Floor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update floor information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Update floor information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Floor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Floor data",
                        "name": "floor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FloorUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/floors": {
            "get": {
                "description": "Retrieve list of all floor records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Retrieve list of all floor records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FloorList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/floors/buildingId/{id}": {
            "get": {
                "description": "Retrieve list of all floors based on building Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "floors"
                ],
                "summary": "Retrieve list of all floors based on building Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FloorList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Retrieve overall health of the service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serviceHealth"
                ],
                "summary": "Retrieve overall health of the service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HealthCheck"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HealthCheck"
                        }
                    }
                }
            }
        },
        "/location": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "Location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposedLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/location/byBuildingId/{id}": {
            "get": {
                "description": "Retrieve list of locations by building Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve list of locations by building Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/location/byFloorId/{id}": {
            "get": {
                "description": "Retrieve list of locations by floor Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve list of locations by floor Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Floor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/location/{id}": {
            "get": {
                "description": "Retrieve location by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve location by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a location by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete a location by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update location information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update location information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location data",
                        "name": "floor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LocationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "Retrieve list of all location objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve list of all location objects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new panel event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Create a new panel event",
                "parameters": [
                    {
                        "description": "Panel data",
                        "name": "panel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Panel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel/{id}": {
            "get": {
                "description": "Retrieve panel by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve panel by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Panel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a panel by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Delete a panel by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel/{id}/approve": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set panel location",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Set panel location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Approval data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PanelApproval"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel/{id}/location": {
            "get": {
                "description": "Retrieve panel location by the panel Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve panel location by the panel Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set panel location",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Set panel location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel/{id}/restricted": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set panel age restriction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Set panel age restriction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Age restriction state",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PanelAgeRestrictionState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panel/{id}/schedule": {
            "get": {
                "description": "Retrieve panel schedule by the panel Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve panel schedule by the panel Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Schedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set the scheduled time for a panel",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Set the scheduled time for a panel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Panel Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scheduled Time",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PanelScheduledTime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panels": {
            "get": {
                "description": "Retrieve list of all approved panels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve list of all approved panels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PanelList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panels/ByLocationId/{id}": {
            "get": {
                "description": "Retrieve list of all approved panels by location Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve list of all approved panels by location Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PanelList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/panels/all": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieve list of all panels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "panels"
                ],
                "summary": "Retrieve list of all panels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PanelList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposedUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/id/{id}": {
            "get": {
                "description": "Retrieve a user by their Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user by their Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SafeUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/name/{name}": {
            "get": {
                "description": "Retrieve a user by their UserName",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user by their UserName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SafeUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/{name}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password data",
                        "name": "changePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/{name}/status": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieve a user's active status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user's active status. Can be either 'enabled' or 'locked'",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserStatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set a user's active status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Set a user's active status. Can be either 'enabled' or 'locked'",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserStatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve list of all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UsersList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.SafeUser": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "creationDate": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "model.Building": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "creationDateTime": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "model.BuildingFloor": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "buildingId": {
                    "type": "integer"
                },
                "creationDateTime": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "integer"
                },
                "floorName": {
                    "type": "string"
                }
            }
        },
        "model.BuildingList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Building"
                    }
                }
            }
        },
        "model.BuildingUpdate": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "model.FailureMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.FloorList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BuildingFloor"
                    }
                }
            }
        },
        "model.FloorUpdate": {
            "type": "object",
            "properties": {
                "buildingId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.HealthCheck": {
            "type": "object",
            "properties": {
                "db": {
                    "type": "string"
                },
                "diskSpace": {
                    "type": "string"
                },
                "diskWritable": {
                    "type": "string"
                },
                "health": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "buildingId": {
                    "type": "integer"
                },
                "creationDateTime": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "integer"
                },
                "floorId": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "model.LocationList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Location"
                    }
                }
            }
        },
        "model.LocationUpdate": {
            "type": "object",
            "properties": {
                "buildingId": {
                    "type": "integer"
                },
                "floorId": {
                    "type": "integer"
                }
            }
        },
        "model.Panel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "ageRestricted": {
                    "type": "boolean"
                },
                "approvalDateTime": {
                    "type": "string"
                },
                "approvalStatus": {
                    "type": "boolean"
                },
                "approvedById": {
                    "type": "integer"
                },
                "creationDateTime": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "durationInMinutes": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "panelRequestorEmail": {
                    "type": "string"
                },
                "scheduledTime": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "model.PanelAgeRestrictionState": {
            "type": "object",
            "properties": {
                "restrictionState": {
                    "type": "boolean"
                }
            }
        },
        "model.PanelApproval": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "boolean"
                }
            }
        },
        "model.PanelList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Panel"
                    }
                }
            }
        },
        "model.PanelScheduledTime": {
            "type": "object",
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "locationId": {
                    "type": "integer"
                },
                "scheduledTime": {
                    "type": "string"
                }
            }
        },
        "model.PasswordChange": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "model.ProposedBuilding": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "model.ProposedFloor": {
            "type": "object",
            "properties": {
                "buildingName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ProposedLocation": {
            "type": "object",
            "properties": {
                "buildingId": {
                    "type": "integer"
                },
                "floorId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ProposedUser": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "model.Schedule": {
            "type": "object",
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "model.SuccessMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "creationDate": {
                    "type": "string"
                },
                "lastChangedDate": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "model.UserStatusMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "string"
                }
            }
        },
        "model.UsersList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}